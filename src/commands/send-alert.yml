description: Send build results to Opsgenie API, with detailed information
parameters:
  email_domain:
    default: coda.io
    description: |
      Optional email domain for users within the workspace. Must be specified if user aliases are not fully qualified.
    type: string
  send_slack_failure:
    default: false
    description: Send slack notification for failures; default false
    type: boolean
  send_slack_success:
    default: false
    description: Send slack notification for success; default false
    type: boolean
  channel:
    description: slack channel ID to send the message
    type: string
    default: C02GSTENV19
  REPORT:
    description: bool set in check_parallel to determine whether parallel builds ready to report
    type: env_var_name
    default: REPORT
  BRANCH_MATCH:
    description: |
      bool set in check_parallel to determine whether branch name should be reported in slack
      set to main|preflight|release ; set in env var because branch checking equal not matching in commands
    type: integer
    default: 0
steps:
  - run:
      name: print << parameters.BRANCH_MATCH >>
      command: echo << parameters.BRANCH_MATCH >>
      when: always
  - run:
      name: Check if in parallel
      command: <<include(scripts/check_parallel_py.sh)>>
      when: on_fail
      environment:
        CURRENT_JOB_STATUS: 0
  - run:
      name: Check if in parallel
      command: <<include(scripts/check_parallel_py.sh)>>
      when: on_success
      environment:
        CURRENT_JOB_STATUS: 1
  - run:
      command: |
        echo "export EMAIL_DOMAIN=<<parameters.email_domain>>" >> "$BASH_ENV"
        echo "export ALIAS=${CIRCLE_PROJECT_REPONAME}/${CIRCLE_BRANCH}#${CIRCLE_JOB}" >> "$BASH_ENV"
        echo "export URI_ALIAS=${CIRCLE_PROJECT_REPONAME}%2F${CIRCLE_BRANCH}%23${CIRCLE_JOB}" >> "$BASH_ENV"
      name: Set variables
      when: always
  - run:
      name: Fetch User Information
      command: <<include(scripts/fetch_user_handles.sh)>>
      when: on_fail
  - run:
      name: Calculate LKG Diff Git URL
      command: <<include(scripts/get_lkg_hash_py.sh)>>
      when: on_fail
  - run:
      name: Send OpsGenie Failure Alert
      command: <<include(scripts/opsgenie_alert_py.sh)>>
      environment:
        OPSGENIE_BODY: <<include(message_templates/opsgenie_failure.json)>>
        STATUS: 0
      when: on_fail
  - run:
      name: Send OpsGenie Success Alert
      command: <<include(scripts/opsgenie_alert_py.sh)>>
      environment:
        OPSGENIE_BODY: <<include(message_templates/opsgenie_success.json)>>
        STATUS: 1
      when: on_success
  - run:
      name: print send_slack
      command: echo "${SEND_SLACK}"
  - run:
      name: Halt if branch name or alert does not match
      command: |
        if [ "${SEND_SLACK}" = 0 ]; then
            circleci-agent step halt
        fi
      when: always
  - when: # only send slack if passes parallel check & requested to be sent & apropriate branch
      condition:
        or:
          - << parameters.send_slack_failure >>
          - << parameters.send_slack_success >>
      steps:
        - slack-notify-status:
            slack_tag: $SLACK_USER_TAG
            channel: << parameters.channel >>
            send_slack_failure: << parameters.send_slack_failure >>
            send_slack_success: << parameters.send_slack_success >>

