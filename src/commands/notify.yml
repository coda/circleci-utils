description: Send build results to Opsgenie API, with detailed information
parameters:
  email_domain:
    default: coda.io
    description: |
        Optional email domain for users within the workspace. Must be specified if user aliases are not fully qualified.
    type: string
  endpoint:
    default: OPSGENIE_WEBHOOK
    description: Enter either your Full URL value that you copied in Opsgenie
      Integration Page
    type: env_var_name
  on_failure:
    default: false
    description: Failure information of circleci build
    type: boolean
  on_success:
    default: true
    description: Success information of circleci build
    type: boolean
steps:
- run:
    when: always
    command: |
        echo "export EMAIL_DOMAIN=<<parameters.email_domain>>" >> "$BASH_ENV"
    name: Set variables
- run:
    name: Fetch User Information
    when: on_fail
    command: <<include(scripts/fetch_user_handles.sh)>>
- when:
    condition: <<parameters.on_failure>>
    steps:
    - run:
        name: Get diff url
        command: <<include(scripts/get_lkg_hash.sh)>>
        when: on_fail
- run:
    command: |
      echo '{}' | jq '{
        "message": "[CircleCI] [#\(env.CIRCLE_PREVIOUS_BUILD_NUM)]: workflow \(env.CIRCLE_BRANCH) stage \(env.CIRCLE_STAGE) job \(env.CIRCLE_JOB)",
        "alias": "\(env.CIRCLE_PROJECT_REPONAME)/\(env.CIRCLE_BRANCH)#\(env.CIRCLE_JOB)",
        "description":"See \(env.CIRCLE_BUILD_URL) for more details. ",
        "outcome": "failed",
        "username": env.CIRCLE_USERNAME,
        "details": {
          "build_number":env.CIRCLE_PREVIOUS_BUILD_NUM,
          "build_url": env.CIRCLE_BUILD_URL,
          "outcome": "failed"
          }
      }' > /tmp/raw-webhook.json
    name: Bundle build info into webhook payload
    when: on_fail
- run:
    command: |
      echo '{
          "user":"CI Orb",
          "source":"CI Orb",
          "note":"Succesful pass: close alerts"
      }' > /tmp/webhook.json
    name: Bundle build info into webhook payload
    when: on_success
- run:
  # Can not evaluate bash variables on ci conditional; must set inside command
    command: |
      if [ -n "${USER_EMAIL}" ]; then
        cat /tmp/raw-webhook.json | jq --arg USER_EMAIL $USER_EMAIL \
        '.responders += [{"username": "'$USER_EMAIL'", "type": "user"}, {"name": "ci_alerts", "type": "team"}]' | \
        jq --arg USER_EMAIL $USER_EMAIL '.details.user = $USER_EMAIL'> /tmp/webhook_temp.json
        mv /tmp/webhook_temp.json /tmp/raw-webhook.json
      fi
    name: Add user email to Webhook
    when: on_fail
- run:
    command: |
      if [ -n "${DIFF_URL}" ]; then
        cat /tmp/raw-webhook.json | jq --arg DIFF_URL $DIFF_URL '.description +=  " Compare with last passing commit: '$DIFF_URL'"' > /tmp/webhook_temp.json
        mv /tmp/webhook_temp.json /tmp/raw-webhook.json
      fi
    name: Add latest git hash to Webhook
    when: on_fail
- when:
    condition: <<parameters.on_success>>
    steps:
    - run:
        command: |
          alias="${CIRCLE_PROJECT_REPONAME}%2F${CIRCLE_BRANCH}%23${CIRCLE_JOB}"
          curl -X POST -H"Content-Type:application/json" -H "Authorization: GenieKey ${OPS_GENIE_API_KEY}" -d @/tmp/webhook.json "https://api.opsgenie.com/v2/alerts/${alias}/close?identifierType=alias"
        name: Notify $<<parameters.endpoint>> with Success Webhook
        when: on_success
- when:
    condition: <<parameters.on_failure>>
    steps:
    - run:
        command: |
          cat /tmp/raw-webhook.json | jq '.details.outcome="failed"'  > /tmp/webhook.json
          mv /tmp/webhook.json /tmp/raw-webhook.json
          curl -X POST -H"Content-Type:application/json" -H "Authorization: GenieKey ${OPS_GENIE_API_KEY}" -d @/tmp/raw-webhook.json https://api.opsgenie.com/v2/alerts
        name: Notify $<<parameters.endpoint>> with Failure Webhook
        when: on_fail
