description: |
  Notifies the current workflow owner that their workflow is pending approval to proceed.
parameters:
  email_domain:
    description: |
      Optional email domain for users within the workspace.   Must be specified if user aliases are not fully qualified.
    type: string
    default: coda.io
  slack_tag:
    description: slack user to mention
    type: string
    default: "None provided"
  channel:
    description: slack channel ID to send the message
    type: string
    default: C02GSTENV19
  send_slack_failure:
    default: false
    description: Send slack notification for failures; default false
    type: boolean
  send_slack_success:
    default: false
    description: Send slack notification for success; default false
    type: boolean
steps:
  - run:
      name: Set variables
      command: |
        echo "export EMAIL_DOMAIN=<<parameters.email_domain>>" >> "$BASH_ENV"
      when: always
  - run:
      name: Check if env vars needed for slack msg are missing
      command: |
        if [ -z "$SLACK_USER_ID" ]; then \
          echo "export SLACK_USER_TAG=Slack handle not found" >> "$BASH_ENV"
        fi; 
        if [ -z "$OPSGENIE_URL" ]; then \
          echo "export OPSGENIE_URL=https://krypton.app.opsgenie.com" >> "$BASH_ENV"
        fi;
      when: always
  - run:
      name: Fetch User Information from Look Up Table
      command: <<include(scripts/fetch_user_handles.sh)>>
      when: always
  - when:
      condition: <<parameters.send_slack_failure>>
      steps:
        - slack/notify:
            channel: <<parameters.channel>>
            event: fail
            custom: <<include(message_templates/slack_failure.json)>>
            mentions: <<parameters.slack_tag>>
  - when:
      condition: <<parameters.send_slack_success>>
      steps:
        - slack/notify:
            channel: <<parameters.channel>>
            event: pass
            custom: <<include(message_templates/slack_success.json)>>
