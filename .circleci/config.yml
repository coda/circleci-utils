version: 2.1
default_build_environment: &default_build_environment
  docker:
    - image: cimg/base:stable
      auth:
        username: codainternaltools
        password: $DOCKERHUB_PASSWORD

setup: true 

orbs:
  utils: coda/utils@<<pipeline.parameters.dev-orb-version>>
  orb-tools: circleci/orb-tools@11.5.0
  bats: circleci/bats@1.0
  shellcheck: circleci/shellcheck@2.0

# Pipeline Parameters
## These parameters are used internally by orb-tools.
parameters:
  run-integration-tests:
    description: An internal flag to prevent integration test from running before a development version has been created.
    type: boolean
    default: false
  dev-orb-version:
    description: >
      The development version of the orb to test.
      A "dev:alpha" version must exist for the initial pipeline run.
    type: string
    default: "dev:alpha"
  circleci-user:
    description: The user who published orb changes
    type: string
    default: ''


workflows:
  lint-pack:
    when:
      not:
        equal: [ main, << pipeline.git.branch >> ]
    jobs:
      - orb-tools/pack
      # https://www.shellcheck.net/wiki/SC2002
      - shellcheck/check:
          exclude: 'SC2002'
      - orb-tools/publish:
          context: 
            - dockerhub
            - orb-publishing
          orb-name: coda/utils
          requires:
            - orb-tools/pack
            - shellcheck/check
          vcs-type: << pipeline.project.type >>
      - orb-tools/continue:
          context:
            - dockerhub
            - orb-publishing
            - util
            - ops-genie
          pipeline-number: << pipeline.number >>
          requires:
            - orb-tools/publish
          vcs-type: << pipeline.project.type >>
          filters:
              branches:
                  ignore: main

  publish:
    when:
      matches: { pattern: "^v*" , value: << pipeline.git.tag >> }
    jobs:
      - orb-tools/publish:
          context: 
            - dockerhub
            - orb-publishing
            - util
          orb-name: coda/utils
          pub-type: production
          vcs-type: << pipeline.project.type >>