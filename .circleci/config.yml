version: 2.1

default_build_environment: &default_build_environment
  docker:
    - image: cimg/base:stable
      auth:
        username: codainternaltools
        password: $DOCKERHUB_PASSWORD
python_build: &python_build
  docker:
    - image: cimg/python:3.9.0
      auth:
        username: codainternaltools
        password: $DOCKERHUB_PASSWORD
orbs:
  utils: coda/utils@<<pipeline.parameters.dev-orb-version>>
  circleci-cli: circleci/circleci-cli@0.1.9
  orb-tools: circleci/orb-tools@10.1.0
  slack: circleci/slack@4.5.0

# Pipeline Parameters
## These parameters are used internally by orb-tools.
parameters:
  dev-orb-version:
    description: >
      The development version of the orb to test.
      A "dev:alpha" version must exist for the initial pipeline run.
    type: string
    default: "dev:alpha"

commands:

jobs:
  test:
    <<: *python_build
    steps:
      - checkout
      - run:
          command: make wrap-python-files
          name: Add shell script around python files
      - utils/send-alert:
          channel: C02PCQKU6SW # circleci-orb-testing channel
          send_slack_success: true
          send_slack_failure: true
      - utils/slack-notify-waiting-for-approval:
          slack_bot_token: ${SLACK_BOT_TOKEN}

  publish-dev-version:
    <<: *python_build
    parameters:
      publish-token-variable:
        type: env_var_name
        default: ORB_PUBLISHING_TOKEN
        description: publishing token
    steps:
      - checkout
      - run:
          command: make wrap-python-files
          name: Add shell script around python files
      - circleci-cli/install
      - orb-tools/pack
      - orb-tools/publish:
          orb-ref: coda/utils@dev:alpha
          token-variable: <<parameters.publish-token-variable>>

  publish-major:
    <<: *python_build
    parameters:
      publish-token-variable:
        type: env_var_name
        default: ORB_PUBLISHING_TOKEN
        description: publishing token
    steps:
      - checkout
      - run:
          command: make wrap-python-files
          name: Add shell script around python files
      - circleci-cli/install
      - orb-tools/pack
      - orb-tools/increment:
          token-variable: <<parameters.publish-token-variable>>
          segment: major
          orb-ref: coda/utils

  publish-minor:
    <<: *python_build
    parameters:
      publish-token-variable:
        type: env_var_name
        default: ORB_PUBLISHING_TOKEN
        description: publishing token
    steps:
      - checkout
      - run:
          command: make wrap-python-files
          name: Add shell script around python files
      - circleci-cli/install
      - orb-tools/increment:
          token-variable: <<parameters.publish-token-variable>>
          segment: minor
          orb-ref: coda/utils

workflows:
  publish-dev:
    jobs:
      - orb-tools/pack:
          context:
            - dockerhub
      - shellcheck/check:
          context:
            - dockerhub
          dir: ./src/scripts
      - bats/run:
          context:
            - dockerhub
          path: ./src/tests
      - hold-for-dev-publish:
          context:
            - dockerhub
          type: approval
          requires:
            - orb-tools/pack
            - bats/run
            - shellcheck/check
      # Publish development version of the orb.
      - orb-tools/publish-dev:
          context:
            - dockerhub
            - orb-publishing
          orb-name: coda/utils
          requires: [hold-for-dev-publish]
      # dev:${CIRCLE_SHA1:0:7} version of your orb
      - orb-tools/trigger-integration-tests-workflow:
          name: trigger-integration-dev
          context:
            - dockerhub
            - orb-publishing
            - util
          filters:
            branches:
              ignore: main
          requires:
            - publish-dev-version
  publish-prod:
    jobs:
      - integration-test-notify:
          context:
            - dockerhub
            - orb-publishing
      - integration-test-slack:
          context:
            - dockerhub
            - orb-publishing
      - utils/cancel-older-awaiting-approvals:
          context:
            - dockerhub
            - orb-publishing
      - orb-tools/dev-promote-prod-from-commit-subject:
          orb-name: coda/utils
          context:
            - dockerhub
            - orb-publishing
          publish-token-variable: ORB_PUBLISHING_TOKEN
          requires:
            - minor-semver
          filters:
            branches:
              only:
                - main
